1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
It game me a file to compare another file against.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It allows for the ability to look at older versions of files as well as having an archive of previous files.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions
automatically saved, like Google Docs does? 
The pros of manual saving is that version control is at your discretion and can be done as frequent or infrequent as you want.
The con would be human error of forgetting to make a save as opposed to having this done for you.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google
Docs, treat each file separately?
Git was designed with programming in mind and understands that files may be dependent upon one another and may need to be updated
as well when a change is made to another file in the repository.  Where on the other hand this functionality may not be needed in 
Google Docs. 

5. How can you use the commands git log and git diff to view the history of files?
The git log command shows the commits made within a specific repository which gives you the past versions of files while the diff
command allows for the user to see what changes have been made between specified commit points.

6. How might using version control make you more confident to make changes that could break something?
It gives the user peace of mind, that they can revert back to a previous version of their file that is correct.

7. Now that you have your workspace set up, what do you want to try using Git for?
Getting money.
